package bookshop.code;
// Generated 08.04.2016 16:24:57 by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Book generated by hbm2java
 */
@Entity
@Table(name = "book", catalog = "bookshop")
public class Book implements java.io.Serializable
{

	private Integer id;
	private Genre genre;
	private PublHouse publHouse;
	private String isbn;
	private String title;
	private Integer price;
	private Date publicationDate;
	private Integer pages;
	private Integer availableAmount;
	private Integer annotation;
	private Date writingDate;
	private Set<OrderItems> orderItemses = new HashSet<OrderItems>(0);
	private Set<BookToAuthor> bookToAuthors = new HashSet<BookToAuthor>(0);
	private Set<Author> authors = new HashSet<Author>(0);

	public Book()
	{
	}

	public Book(Genre genre, PublHouse publHouse, String isbn, String title, Integer price, Date publicationDate,
			Integer pages, Integer availableAmount, Integer annotation, Date writingDate, Set<OrderItems> orderItemses,
			Set<BookToAuthor> bookToAuthors)
	{
		this.genre = genre;
		this.publHouse = publHouse;
		this.isbn = isbn;
		this.title = title;
		this.price = price;
		this.publicationDate = publicationDate;
		this.pages = pages;
		this.availableAmount = availableAmount;
		this.annotation = annotation;
		this.writingDate = writingDate;
		this.orderItemses = orderItemses;
		this.bookToAuthors = bookToAuthors;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId()
	{
		return this.id;
	}

	public void setId(Integer id)
	{
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "genre_id")
	public Genre getGenre()
	{
		return this.genre;
	}

	public void setGenre(Genre genre)
	{
		this.genre = genre;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "publ_house_id")
	public PublHouse getPublHouse()
	{
		return this.publHouse;
	}

	public void setPublHouse(PublHouse publHouse)
	{
		this.publHouse = publHouse;
	}

	@Column(name = "ISBN", length = 10)
	public String getIsbn()
	{
		return this.isbn;
	}

	public void setIsbn(String isbn)
	{
		this.isbn = isbn;
	}

	@Column(name = "title", length = 100)
	public String getTitle()
	{
		return this.title;
	}

	public void setTitle(String title)
	{
		this.title = title;
	}

	@Column(name = "price")
	public Integer getPrice()
	{
		return this.price;
	}

	public void setPrice(Integer price)
	{
		this.price = price;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "publication_date", length = 10)
	public Date getPublicationDate()
	{
		return this.publicationDate;
	}

	public void setPublicationDate(Date publicationDate)
	{
		this.publicationDate = publicationDate;
	}

	@Column(name = "pages")
	public Integer getPages()
	{
		return this.pages;
	}

	public void setPages(Integer pages)
	{
		this.pages = pages;
	}

	@Column(name = "available_amount")
	public Integer getAvailableAmount()
	{
		return this.availableAmount;
	}

	public void setAvailableAmount(Integer availableAmount)
	{
		this.availableAmount = availableAmount;
	}

	@Column(name = "annotation")
	public Integer getAnnotation()
	{
		return this.annotation;
	}

	public void setAnnotation(Integer annotation)
	{
		this.annotation = annotation;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "writing_date", length = 10)
	public Date getWritingDate()
	{
		return this.writingDate;
	}

	public void setWritingDate(Date writingDate)
	{
		this.writingDate = writingDate;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "book")
	public Set<OrderItems> getOrderItemses()
	{
		return this.orderItemses;
	}

	public void setOrderItemses(Set<OrderItems> orderItemses)
	{
		this.orderItemses = orderItemses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "book")
	public Set<BookToAuthor> getBookToAuthors()
	{
		return this.bookToAuthors;
	}

	public void setBookToAuthors(Set<BookToAuthor> bookToAuthors)
	{
		this.bookToAuthors = bookToAuthors;
	}

	@ManyToMany(fetch = FetchType.EAGER, cascade = { CascadeType.PERSIST, CascadeType.MERGE })
	@JoinTable(name = "book_to_author", catalog = "bookshop", joinColumns = {
			@JoinColumn(name = "book_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "author_id", nullable = false, updatable = false) })
	public Set<Author> getAuthors()
	{
		return this.authors;
	}

	public void setAuthors(Set<Author> a)
	{
		this.authors = a;
	}

	public void setAuthors(ArrayList<Author> a)
	{
		Set<Author> set = new HashSet<Author>(a);
		this.authors = set;
	}

	public void setAuthors(List<Author> a)
	{
		Set<Author> set = new HashSet<Author>(a);
		this.authors = set;
	}

}
